name: Deploy to ECR

on:
 
  push:
    branches:
      - container_builds-default
      - container_builds-dev
      - container_builds-prod

jobs:
  
  build:
    
    name: Build Image
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:

    - name: Check out code
      uses: actions/checkout@v2
    
    - name: Set AWS Environment variable based on branch
      run: |
        if [ ${{ github.ref }} == refs/heads/container_builds-default ]
        then
          echo AWS_ENV=Klayers-defaultp38 >> $GITHUB_ENV
        elif [ ${{ github.ref }} == refs/heads/container_builds-dev]
        then
          echo AWS_ENV=Klayers-devp38 >> $GITHUB_ENV
        elif [ ${{ github.ref }} == refs/heads/container_builds-prod ]
        then
          echo AWS_ENV=Klayers-prodp38 >> $GITHUB_ENV            
        else
          exit 1
        fi
        
        APP_NAME=$(cat ./pipeline/Terraform/terraform.tfvars.json | jq -r '.app_name')
        echo APP_NAME=$APP_NAME >> $GITHUB_ENV

      shell: bash

    - name: Get AWS configuration
      run: |
        GITHUB_ROLE_ARN=$(cat ./.github/workflows/role_arns.json | jq -r --arg arg $AWS_ENV '.github_role_arn | .[$arg]')
        AWS_REGION=$(cat ./pipeline/Terraform/terraform.tfvars.json | jq -r --arg arg $AWS_ENV '.aws_region | .[$arg]')
        
        echo AWS_ROLE_ARN=$GITHUB_ROLE_ARN >> $GITHUB_ENV
        echo AWS_DEFAULT_REGION=$AWS_REGION >> $GITHUB_ENV

      shell: bash

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-region: ${{ env.AWS_DEFAULT_REGION }}
        role-to-assume: ${{ env.AWS_ROLE_ARN }}
        role-duration-seconds: 1200
        role-session-name: container-build-${{ env.AWS_ENV }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Set AWS Profile
      run: |
        AWS_PROFILE=$(cat ./pipeline/Terraform/terraform.tfvars.json | jq -r --arg STAGE $STAGE '.aws_profile."\($STAGE)"')
        echo AAWS_PROFILE=$AWS_PROFILE >> $GITHUB_ENV

    - name: Build, tag, and push docker image to Amazon ECR
      run: |
        cd pipeline/container_images/build_images/p39_x86
        ./deploy-container.sh $AWS_ENV